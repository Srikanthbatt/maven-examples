/*
        
         stage('OWASP Scan') {
            steps {
                dependencyCheck additionalArguments: '--scan ./angularapp/app --disableYarnAudit --disableNodeAudit', odcInstallation: 'DC'
            }
        }
        
        stage ('angular') {
            steps {
                dir('angularapp/app') {
                    sh 'npm install'
                    sh 'npm run start &'
                }
            }
        }
        */
 stage('Trivy image scan') {
            steps {
                sh "trivy image srikanthbattula/angular-app:latest"
                sh "trivy image --format json -o trivy-report.json --scanners vuln srikanthbattula/angular-app:latest"

 stage('Deploy to Tomcat') {
            steps {
                sshagent(['ec2-pem-key']) {
                   sh "scp -r -o StrictHostKeyChecking=no angularapp/app/dist/app ubuntu@50.19.87.84:/opt/tomcat/apache-tomcat-8.5.93/webapps"


post {
        failure {
            steps {
                script {
                    slackSend(
                        channel: 'angular',
                        color: 'danger',
                        message: "Pipeline failed: ${currentBuild.fullDisplayName} - ${currentBuild.result}"
                    )
                }
            }
        }
        success {
            steps {
                script {
                    slackSend(channel: 'angular', color: 'good', message: "Pipeline Succeeded: ${currentBuild.fullDisplayName}")
                }
            }
        }
    }



    post {
    success {
        script {
            slackSend(channel: 'angular', color: 'good', message: "Pipeline Succeeded: ${currentBuild.fullDisplayName}")
        }
    }
    failure {
        script {
            slackSend(channel: 'angular', color: 'danger', message: "Pipeline Failed: ${currentBuild.fullDisplayName}")
        }
    }
}
  stage('OWASP Scan') {
            steps {
                dependencyCheck additionalArguments: '--scan ./angularapp/app --disableYarnAudit --disableNodeAudit', odcInstallation: 'DC'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
